{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\12067\\\\Downloads\\\\My Reads Project\\\\src\\\\components\\\\SearchBooks.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Book from './Book';\nimport * as BooksAPI from \"../BooksAPI\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchBooks(props) {\n  _s();\n\n  const [query, setQuery] = useState(\"\");\n  const [searchedBooks, setSearchedBooks] = useState([]);\n  useEffect(() => {\n    if (query) {\n      BooksAPI.search(query).then(data => {\n        // console.log('sds', data)\n        setSearchedBooks(data);\n\n        if (data.error) {// setSearchBooks([])\n        } else {\n          setSearchedBooks(data);\n        }\n      });\n    }\n\n    return () => {// setSearchBooks([])\n    };\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-books\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-search\",\n        onClick: () => {\n          props.setShowSearchPage(false);\n        },\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-books-input-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by title or author\",\n          value: query,\n          onChange: e => setQuery(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-books-results\",\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: \"books-grid\",\n        children: searchedBooks.map(b => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Book, {\n            book: b,\n            changeBookShelf: props.updateBookShelf\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, b.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SearchBooks, \"mK2xHSyfS0AKUJAZ3ITXEOAXvDY=\");\n\n_c = SearchBooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBooks\");","map":{"version":3,"sources":["C:/Users/12067/Downloads/My Reads Project/src/components/SearchBooks.js"],"names":["React","useState","useEffect","Book","BooksAPI","BrowserRouter","Router","Switch","Route","Link","SearchBooks","props","query","setQuery","searchedBooks","setSearchedBooks","search","then","data","error","setShowSearchPage","e","target","value","map","b","updateBookShelf","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,KAAKC,QAAZ,MAA0B,aAA1B;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,EAAiDC,IAAjD,QAA6D,kBAA7D;;AAEA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAEzC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,EAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,KAAJ,EAAW;AACTR,MAAAA,QAAQ,CAACY,MAAT,CAAgBJ,KAAhB,EAAuBK,IAAvB,CAA4BC,IAAI,IAAI;AAElC;AACAH,QAAAA,gBAAgB,CAACG,IAAD,CAAhB;;AACA,YAAIA,IAAI,CAACC,KAAT,EAAgB,CACd;AACD,SAFD,MAEO;AACLJ,UAAAA,gBAAgB,CAACG,IAAD,CAAhB;AACD;AACF,OATD;AAUD;;AAED,WAAO,MAAM,CACX;AACD,KAFD;AAID,GAlBQ,EAkBN,CAACN,KAAD,CAlBM,CAAT;AAoBA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,OAAO,EAAE,MAAM;AAAED,UAAAA,KAAK,CAACS,iBAAN,CAAwB,KAAxB;AAAgC,SAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,+BASE;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,WAAW,EAAC,2BAA/B;AAA2D,UAAA,KAAK,EAAER,KAAlE;AAAyE,UAAA,QAAQ,EAAGS,CAAD,IAAOR,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV;AAAlG;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA,kBACGT,aAAa,CAACU,GAAd,CAAkBC,CAAC,iBAClB;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,IAAI,EAAEA,CAAZ;AAAe,YAAA,eAAe,EAAEd,KAAK,CAACe;AAAtC;AAAA;AAAA;AAAA;AAAA;AADF,WAASD,CAAC,CAACE,EAAX;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GArDuBjB,W;;KAAAA,W","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Book from './Book';\nimport * as BooksAPI from \"../BooksAPI\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nexport default function SearchBooks(props) {\n\n  const [query, setQuery] = useState(\"\")\n  const [searchedBooks, setSearchedBooks] = useState([])\n\n  useEffect(() => {\n    if (query) {\n      BooksAPI.search(query).then(data => {\n\n        // console.log('sds', data)\n        setSearchedBooks(data)\n        if (data.error) {\n          // setSearchBooks([])\n        } else {\n          setSearchedBooks(data)\n        }\n      })\n    }\n\n    return () => {\n      // setSearchBooks([])\n    }\n\n  }, [query])\n\n  return (\n    <div className=\"search-books\">\n      <div className=\"search-books-bar\">\n        <button className=\"close-search\" onClick={() => { props.setShowSearchPage(false) }}>Close</button>\n        <div className=\"search-books-input-wrapper\">\n          {/*\n            NOTES: The search from BooksAPI is limited to a particular set of search terms.\n            You can find these search terms here:\n            https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n\n            However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n            you don't find a specific author or title. Every search is limited by search terms.\n          */}\n          <input type=\"text\" placeholder=\"Search by title or author\" value={query} onChange={(e) => setQuery(e.target.value)} />\n       \n        </div>\n      </div>\n      <div className=\"search-books-results\">\n        <ol className=\"books-grid\">\n          {searchedBooks.map(b => (\n            <li key={b.id}>\n              <Book book={b} changeBookShelf={props.updateBookShelf} />\n            </li>\n          ))}\n        </ol>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}